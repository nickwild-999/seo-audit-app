---
---

<div class="max-w-2xl mx-auto">
  <div class="bg-white rounded-lg shadow-md p-6">
    <h2 class="text-2xl font-bold text-gray-900 mb-6">Start New SEO Audit</h2>
    
    <form id="audit-form" class="space-y-4">
      <div>
        <label for="url" class="block text-sm font-medium text-gray-700 mb-2">
          Website URL
        </label>
        <input
          type="url"
          id="url"
          name="url"
          required
          placeholder="https://example.com"
          class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
        />
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <label class="flex items-center">
            <input
              type="checkbox"
              id="includeScreenshots"
              name="includeScreenshots"
              checked
              class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
            />
            <span class="ml-2 text-sm text-gray-700">Include Screenshots</span>
          </label>
        </div>
        
        <div>
          <label class="flex items-center">
            <input
              type="checkbox"
              id="mobileTest"
              name="mobileTest"
              checked
              class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
            />
            <span class="ml-2 text-sm text-gray-700">Mobile Testing</span>
          </label>
        </div>
      </div>
      
      <button
        type="submit"
        id="submit-btn"
        class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"
      >
        <span id="btn-text">Start Audit</span>
        <span id="btn-loading" class="hidden">
          <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Running Audit...
        </span>
      </button>
    </form>
    
    <div id="error-message" class="hidden mt-4 p-4 bg-red-100 border border-red-300 rounded-md">
      <p class="text-red-700" id="error-text"></p>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('audit-form') as HTMLFormElement;
  const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
  const btnText = document.getElementById('btn-text') as HTMLSpanElement;
  const btnLoading = document.getElementById('btn-loading') as HTMLSpanElement;
  const errorMessage = document.getElementById('error-message') as HTMLDivElement;
  const errorText = document.getElementById('error-text') as HTMLParagraphElement;
  
  form.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(form);
    const url = formData.get('url') as string;
    const includeScreenshots = formData.get('includeScreenshots') === 'on';
    const mobileTest = formData.get('mobileTest') === 'on';
    
    submitBtn.disabled = true;
    btnText.classList.add('hidden');
    btnLoading.classList.remove('hidden');
    errorMessage.classList.add('hidden');
    
    try {
      const response = await fetch('/api/audit', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          url,
          options: {
            includeScreenshots,
            mobileTest
          }
        })
      });
      
      const result = await response.json();
      
      if (result.success && result.auditId) {
        window.location.href = `/report/${result.auditId}`;
      } else {
        throw new Error(result.error || 'Unknown error occurred');
      }
    } catch (error) {
      errorText.textContent = error instanceof Error ? error.message : 'An error occurred';
      errorMessage.classList.remove('hidden');
    } finally {
      submitBtn.disabled = false;
      btnText.classList.remove('hidden');
      btnLoading.classList.add('hidden');
    }
  });
});
</script>